name: CI and CD

on: [push, pull_request, release]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14.15

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm install @vue/cli
      - run: npm install
      - run: npm run build
      - run: tar czf build.tar.gz dist/

      - name: Upload dist directory as artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

      - name: upload build to target system
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: "build.tar.gz"
          target: "kolenka-front-builds"

  build-prod:
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 14.15

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm install @vue/cli
      - run: npm install
      - run: npm run build-prod

      - name: Upload dist directory as artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  deploy-beta:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Deploy on remote machine
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          envs: GITHUB_RUN_ID
          script: |
            ./deploy-frontend.sh

  deploy-production:
    runs-on: ubuntu-latest
    needs: build-prod
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Deploy on remote machine
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          envs: GITHUB_RUN_ID
          script: ./deploy-frontend.sh $GITHUB_RUN_ID prod
